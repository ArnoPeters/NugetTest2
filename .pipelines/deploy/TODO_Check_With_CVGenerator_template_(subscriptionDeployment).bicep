/*
   TODO: Description
*/

targetScope = 'subscription'

// ---- Standard parameters

@description('Date in simple variant on ISO 8601. Required to create unique names for linked template deployments, to prevent Azure from overwriting the history of those deployments. Always leave this one to its default!')
param deploymentDateTimeStamp string = utcNow('yyyyMMdd-HHmm')

@description('Specifies the location for the resources.')
param location string

@description('Optional. Any tags that should be added to this resource.')
param tags object = {}

@allowed([
  'd'
  'a'
  'p'
])
@description('The environment that these resources are part of.')
param environment string

// ---- Template specific parameters

// ---- Deployment

@description('This var is used deliberately: it is not possible to set a SCOPE on resources that will be deployed using output variables. The value is required to be known beforehand.')
var resourceGroupNames = {
  keyVault: '${ownerPrefix}-deployment-rg'
  your_rg: '${ownerPrefix}-${environment}-your_rg-rg'
}

// ---- If required - Keyvault link
//      Name cannot be generated by any outputs, as the resource cannot be in a module if the .getSecret function is used. 
resource kv 'Microsoft.KeyVault/vaults@2023-02-01' existing = {
  name: '${ownerPrefix}-deployment-kv'
  scope: resourceGroup(resourceGroupNames.keyVault)
}

// ---- your_RG ----

module your_RG 'APS/Resources/resourceGroups.bicep' = {
  name: '${deploymentDateTimeStamp}-your_RG'
  params: {
    location: location
    resourceGroupName: resourceGroupNames.your_rg
    environment: environment
    ownerContactEmail: kv.getSecret('ownerContactEmail') //This can be a different secret in the same keyvault for another team
    ownerPrefix: kv.getSecret('ownerPrefix') //This can be a different secret in the same keyvault for another team
    partOf: purpose_of_the_application //TODO: name
    additionalTags: tags
  }
}

//TODO: add your deployment below

module your_module 'any_module' = {
  scope: az.resourceGroup(resourceGroupNames.your_rg)
  name: '${deploymentDateTimeStamp}-your_module'
  params: {
    location: location
    tags: your_RG.outputs.tags
    instanceNameFormat: '${your_RG.outputs.instanceNameFormat}-any_customization'
    //displayName: 'Optional'
  }
}
